<!-- Reference:
https://github.com/ros/urdf_sim_tutorial -->

<launch>

  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="recording" default="false"/>
  <arg name="single" default="false"/>
  <arg name="match" default="false"/>
  <arg name="world_name" default="$(find vss_simulation)/worlds/vss_field.world"/>
  <arg name="model" default="$(find vss_simulation)/urdf/vss_simulation.xacro"/>
  <arg name="height" default="0.080"/>
  <arg name="x" default="-0.25" />
  <arg name="y" default="0" />
  <arg name="yaw" default="0" />

  <!-- Add our project workspace to Gazebo index to load custom models -->
  <env name="GAZEBO_RESOURCE_PATH" value="$(find vss_simulation)"/>
  <env name="GAZEBO_MODEL_PATH" value="$(find vss_simulation)/models"/>

  <!-- Load world model -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="recording" value="$(arg recording)"/>
    <arg name="world_name" value="$(arg world_name)"/>
  </include>

  <!-- Load tf basic node for reference frame control -->
  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />

  <!-- Load node to re-publish the gazebo message in the sintax of
    ThunderVolt project -->
  <node name="vision_proxy" pkg="vss_simulation" type="vision_proxy.py"/>

  <group if="$(arg single)" ns="robot_0">
    <!-- Load robot file -->
    <include file="$(find vss_simulation)/launch/spawn_robot.launch">
      <arg name="model" value="$(arg model)" />
      <arg name="x" value="$(arg x)" />
      <arg name="y" value="$(arg y)" />
      <arg name="yaw" value="$(arg yaw)" />
    </include>
  </group>

  <group unless="$(arg single)">
    <group if="$(arg match)">
        <!-- Load robot file and build a 2 teams -->
        <include file="$(find vss_simulation)/launch/spawn_match.launch">
        <arg name="model" value="$(arg model)" />
        </include>
    </group>

    <group unless="$(arg match)">
      <!-- Load robot file and build a 3 robot team -->
      <include file="$(find vss_simulation)/launch/spawn_team.launch">
      <arg name="model" value="$(arg model)" />
      </include>
    </group>
  </group>

</launch>