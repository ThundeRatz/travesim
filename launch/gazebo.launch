<!-- Reference:
https://github.com/ros/urdf_sim_tutorial -->

<launch>

  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="headless" default="false"/>

  <arg name="model" default="$(find vss_simulation)/urdf/vss_simulation.xacro"/>
  <arg name="height" default="0.080"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch" >
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load tf basic node for reference frame control -->
  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />

  <group ns="robot_0">
    <param name="tf_prefix" value="robot0_tf" />
    <include file="$(find vss_simulation)/launch/spawn_robot.launch" >
      <arg name="pose" value="-x 1 -y 1 -z 0" />
      <arg name="robot_number"  value="0" />
    </include>
  </group>

  <group ns="robot_1">
    <param name="tf_prefix" value="robot1_tf" />
    <include file="$(find vss_simulation)/launch/spawn_robot.launch" >
      <arg name="pose" value="-x 0 -y 1 -z 0" />
      <arg name="robot_number"  value="1" />
    </include>
  </group>
  <!-- <param name="robot_description"
    command="$(find xacro)/xacro.py $(arg model) robot_number:=1" /> -->

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <!-- <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z $(arg height) -urdf -model robot -param robot_description"
        respawn="false" output="screen" /> -->

  <!-- <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-file $(find vss_simulation)/urdf/vss_simulation.urdf -urdf -model vss_simulation"
    output="screen" /> -->

  <!-- <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" /> -->

  <!-- <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node> -->

</launch>